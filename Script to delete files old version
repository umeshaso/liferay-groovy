import com.liferay.journal.model.JournalArticle;
import com.liferay.journal.service.JournalArticleLocalServiceUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.OrderFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ProjectionFactoryUtil;
import com.liferay.portal.kernel.dao.orm.PropertyFactoryUtil;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.Group;
import com.liferay.portal.kernel.service.GroupLocalServiceUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.workflow.WorkflowConstants;

  
import com.liferay.portal.kernel.repository.model.FileEntry;
import com.liferay.portal.kernel.repository.model.FileVersion;
import com.liferay.portal.kernel.repository.model.Folder;
//import com.liferay.portlet.documentlibrary.service.DLAppServiceUtil;
import com.liferay.document.library.kernel.service.DLAppServiceUtil;

import java.util.ArrayList;
import java.util.List;

final double MIN_NUMBER_FIRST_VERSIONS_KEPT = 0.0;
final double MIN_NUMBER_LATEST_VERSIONS_KEPT = 0.0;
final long groupId= 35271;
final long folderId= 0;

listFiles(groupId, folderId);

def listFiles(groupId, folderId) {

    allfiles = DLAppServiceUtil.getFileEntries(groupId,folderId)
    for (FileEntry file:allfiles) {
         out.println("File Title: " + file.getTitle());
         out.println("File Version: " + file.getVersion());
         List results = file.getFileVersions(-1);
         latestversion = file.getVersion();
         for(FileVersion fv : results) {
             if(fv.getVersion() != latestversion){
                  out.println("Deleting >>" + fv.getVersion()  );
                  //DLAppServiceUtil.deleteFileVersion(file.getFileEntryId(), fv.getVersion());
             }
         }
     }
 
     allfolders = DLAppServiceUtil.getFolders(groupId,folderId);
     for (Folder folder:allfolders) {
           out.println("Folder Name: " + folder.getName());
           listFiles(groupId,folder.getFolderId());
     }
}
